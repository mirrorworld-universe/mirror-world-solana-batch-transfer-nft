import { findBidReceiptPda } from './pdas.mjs';
import { toLazyBid } from './Bid.mjs';
import { toBidReceiptAccount } from './accounts.mjs';
import { useOperation } from '../../types/Operation.mjs';

// Operation
// -----------------

const Key = 'FindBidByAddressOperation';
const findBidByAddressOperation = useOperation(Key);
// -----------------
// Handler
// -----------------
const findBidByAddressOperationHandler = {
  handle: async (operation, metaplex, scope) => {
    const {
      address,
      auctionHouse,
      commitment,
      loadJsonMetadata = true
    } = operation.input;
    const receiptAddress = findBidReceiptPda(address);
    const account = toBidReceiptAccount(await metaplex.rpc().getAccount(receiptAddress, commitment));
    scope.throwIfCanceled();
    const lazyBid = toLazyBid(account, auctionHouse);
    return metaplex.auctions().for(auctionHouse).loadBid(lazyBid, {
      loadJsonMetadata,
      commitment
    }).run(scope);
  }
};

export { findBidByAddressOperation, findBidByAddressOperationHandler };
//# sourceMappingURL=findBidByAddress.mjs.map
