{"version":3,"file":"findAuctionHouseByAddress.mjs","sources":["../../../../src/plugins/auctionHouseModule/findAuctionHouseByAddress.ts"],"sourcesContent":["import type { Commitment, PublicKey } from '@solana/web3.js';\nimport type { Metaplex } from '@/Metaplex';\nimport { useOperation, Operation, OperationHandler } from '@/types';\nimport { toAuctioneerAccount, toAuctionHouseAccount } from './accounts';\nimport { AuctionHouse, toAuctionHouse } from './AuctionHouse';\nimport { DisposableScope } from '@/utils';\nimport { findAuctioneerPda } from './pdas';\nimport { AuctioneerAuthorityRequiredError } from './errors';\n\n// -----------------\n// Operation\n// -----------------\n\nconst Key = 'FindAuctionHouseByAddressOperation' as const;\nexport const findAuctionHouseByAddressOperation =\n  useOperation<FindAuctionHouseByAddressOperation>(Key);\nexport type FindAuctionHouseByAddressOperation = Operation<\n  typeof Key,\n  FindAuctionHouseByAddressInput,\n  AuctionHouse\n>;\n\nexport type FindAuctionHouseByAddressInput = {\n  address: PublicKey;\n  auctioneerAuthority?: PublicKey;\n  commitment?: Commitment;\n};\n\n// -----------------\n// Handler\n// -----------------\n\nexport const findAuctionHouseByAddressOperationHandler: OperationHandler<FindAuctionHouseByAddressOperation> =\n  {\n    handle: async (\n      operation: FindAuctionHouseByAddressOperation,\n      metaplex: Metaplex,\n      scope: DisposableScope\n    ) => {\n      const { address, auctioneerAuthority, commitment } = operation.input;\n      const auctioneerPda = auctioneerAuthority\n        ? findAuctioneerPda(address, auctioneerAuthority)\n        : undefined;\n      const accountsToFetch = [address, auctioneerPda].filter(\n        (account): account is PublicKey => !!account\n      );\n\n      const accounts = await metaplex\n        .rpc()\n        .getMultipleAccounts(accountsToFetch, commitment);\n      scope.throwIfCanceled();\n\n      const auctionHouseAccount = toAuctionHouseAccount(accounts[0]);\n      const mintModel = await metaplex\n        .tokens()\n        .findMintByAddress(auctionHouseAccount.data.treasuryMint, {\n          commitment,\n        })\n        .run(scope);\n      scope.throwIfCanceled();\n\n      if (!auctionHouseAccount.data.hasAuctioneer) {\n        return toAuctionHouse(auctionHouseAccount, mintModel);\n      }\n\n      if (!accounts[1] || !accounts[1].exists) {\n        throw new AuctioneerAuthorityRequiredError();\n      }\n\n      const auctioneerAccount = toAuctioneerAccount(accounts[1]);\n      return toAuctionHouse(auctionHouseAccount, mintModel, auctioneerAccount);\n    },\n  };\n"],"names":["Key","findAuctionHouseByAddressOperation","useOperation","findAuctionHouseByAddressOperationHandler","handle","operation","metaplex","scope","address","auctioneerAuthority","commitment","input","auctioneerPda","findAuctioneerPda","undefined","accountsToFetch","filter","account","accounts","rpc","getMultipleAccounts","throwIfCanceled","auctionHouseAccount","toAuctionHouseAccount","mintModel","tokens","findMintByAddress","data","treasuryMint","run","hasAuctioneer","toAuctionHouse","exists","AuctioneerAuthorityRequiredError","auctioneerAccount","toAuctioneerAccount"],"mappings":";;;;;;AAUA;AACA;;AAEA,MAAMA,GAAG,GAAG,oCAAZ,CAAA;MACaC,kCAAkC,GAC7CC,YAAY,CAAqCF,GAArC,EADP;AAcP;AACA;AACA;AAEO,MAAMG,yCAA+F,GAC1G;AACEC,EAAAA,MAAM,EAAE,OACNC,SADM,EAENC,QAFM,EAGNC,KAHM,KAIH;IACH,MAAM;MAAEC,OAAF;MAAWC,mBAAX;AAAgCC,MAAAA,UAAAA;KAAeL,GAAAA,SAAS,CAACM,KAA/D,CAAA;IACA,MAAMC,aAAa,GAAGH,mBAAmB,GACrCI,iBAAiB,CAACL,OAAD,EAAUC,mBAAV,CADoB,GAErCK,SAFJ,CAAA;AAGA,IAAA,MAAMC,eAAe,GAAG,CAACP,OAAD,EAAUI,aAAV,CAAA,CAAyBI,MAAzB,CACrBC,OAAD,IAAmC,CAAC,CAACA,OADf,CAAxB,CAAA;AAIA,IAAA,MAAMC,QAAQ,GAAG,MAAMZ,QAAQ,CAC5Ba,GADoB,EAEpBC,CAAAA,mBAFoB,CAEAL,eAFA,EAEiBL,UAFjB,CAAvB,CAAA;AAGAH,IAAAA,KAAK,CAACc,eAAN,EAAA,CAAA;IAEA,MAAMC,mBAAmB,GAAGC,qBAAqB,CAACL,QAAQ,CAAC,CAAD,CAAT,CAAjD,CAAA;AACA,IAAA,MAAMM,SAAS,GAAG,MAAMlB,QAAQ,CAC7BmB,MADqB,EAAA,CAErBC,iBAFqB,CAEHJ,mBAAmB,CAACK,IAApB,CAAyBC,YAFtB,EAEoC;AACxDlB,MAAAA,UAAAA;AADwD,KAFpC,CAKrBmB,CAAAA,GALqB,CAKjBtB,KALiB,CAAxB,CAAA;AAMAA,IAAAA,KAAK,CAACc,eAAN,EAAA,CAAA;;AAEA,IAAA,IAAI,CAACC,mBAAmB,CAACK,IAApB,CAAyBG,aAA9B,EAA6C;AAC3C,MAAA,OAAOC,cAAc,CAACT,mBAAD,EAAsBE,SAAtB,CAArB,CAAA;AACD,KAAA;;AAED,IAAA,IAAI,CAACN,QAAQ,CAAC,CAAD,CAAT,IAAgB,CAACA,QAAQ,CAAC,CAAD,CAAR,CAAYc,MAAjC,EAAyC;MACvC,MAAM,IAAIC,gCAAJ,EAAN,CAAA;AACD,KAAA;;IAED,MAAMC,iBAAiB,GAAGC,mBAAmB,CAACjB,QAAQ,CAAC,CAAD,CAAT,CAA7C,CAAA;AACA,IAAA,OAAOa,cAAc,CAACT,mBAAD,EAAsBE,SAAtB,EAAiCU,iBAAjC,CAArB,CAAA;AACD,GAAA;AAtCH;;;;"}