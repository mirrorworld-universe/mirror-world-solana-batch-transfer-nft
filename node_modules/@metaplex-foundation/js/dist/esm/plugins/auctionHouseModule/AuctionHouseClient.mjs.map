{"version":3,"file":"AuctionHouseClient.mjs","sources":["../../../../src/plugins/auctionHouseModule/AuctionHouseClient.ts"],"sourcesContent":["import { Metaplex } from '@/Metaplex';\nimport { now, Signer } from '@/types';\nimport { Task } from '@/utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { AuctionHouse } from './AuctionHouse';\nimport {\n  CreateListingInput,\n  createListingOperation,\n  CreateListingOutput,\n} from './createListing';\nimport {\n  FindListingByAddressInput,\n  findListingByAddressOperation,\n} from './findListingByAddress';\nimport { LazyListing, Listing } from './Listing';\nimport { LoadListingInput, loadListingOperation } from './loadListing';\nimport {\n  CreateBidInput,\n  createBidOperation,\n  CreateBidOutput,\n} from './createBid';\nimport {\n  FindBidByAddressInput,\n  findBidByAddressOperation,\n} from './findBidByAddress';\nimport { Bid, LazyBid } from './Bid';\nimport { LoadBidInput, loadBidOperation } from './loadBid';\nimport {\n  ExecuteSaleInput,\n  executeSaleOperation,\n  ExecuteSaleOutput,\n} from './executeSale';\nimport {\n  FindPurchaseByAddressInput,\n  findPurchaseByAddressOperation,\n} from './findPurchaseByAddress';\nimport { LazyPurchase, Purchase } from './Purchase';\nimport { LoadPurchaseInput, loadPurchaseOperation } from './loadPurchase';\n\ntype WithoutAH<T> = Omit<T, 'auctionHouse' | 'auctioneerAuthority'>;\n\nexport class AuctionHouseClient {\n  constructor(\n    protected readonly metaplex: Metaplex,\n    protected readonly auctionHouse: AuctionHouse,\n    protected readonly auctioneerAuthority?: Signer\n  ) {}\n\n  executeSale(\n    input: WithoutAH<ExecuteSaleInput>\n  ): Task<ExecuteSaleOutput & { purchase: Purchase }> {\n    return new Task(async (scope) => {\n      const output = await this.metaplex\n        .operations()\n        .execute(executeSaleOperation(this.addAH(input)));\n      scope.throwIfCanceled();\n\n      try {\n        const purchase = await this.findPurchaseByAddress(\n          output.sellerTradeState,\n          output.buyerTradeState\n        ).run(scope);\n        return { purchase, ...output };\n      } catch (error) {\n        // Fallback to manually creating a purchase from inputs and outputs.\n      }\n\n      const lazyPurchase: LazyPurchase = {\n        model: 'purchase',\n        lazy: true,\n        auctionHouse: this.auctionHouse,\n        buyerAddress: output.buyer,\n        sellerAddress: output.seller,\n        metadataAddress: output.metadata,\n        bookkeeperAddress: output.bookkeeper,\n        receiptAddress: output.receipt,\n        price: output.price,\n        tokens: output.tokens.basisPoints,\n        createdAt: now(),\n      };\n\n      return {\n        purchase: await this.loadPurchase(lazyPurchase).run(scope),\n        ...output,\n      };\n    });\n  }\n\n  findPurchaseByAddress(\n    sellerTradeState: PublicKey,\n    buyerTradeState: PublicKey,\n    options: Omit<\n      FindPurchaseByAddressInput,\n      'sellerTradeState' | 'buyerTradeState' | 'auctionHouse'\n    > = {}\n  ) {\n    return this.metaplex.operations().getTask(\n      findPurchaseByAddressOperation({\n        sellerTradeState,\n        buyerTradeState,\n        auctionHouse: this.auctionHouse,\n        ...options,\n      })\n    );\n  }\n\n  loadPurchase(\n    lazyPurchase: LazyPurchase,\n    options: Omit<LoadPurchaseInput, 'lazyPurchase'> = {}\n  ): Task<Purchase> {\n    return this.metaplex\n      .operations()\n      .getTask(loadPurchaseOperation({ lazyPurchase, ...options }));\n  }\n\n  list(\n    input: WithoutAH<CreateListingInput>\n  ): Task<CreateListingOutput & { listing: Listing }> {\n    return new Task(async (scope) => {\n      const output = await this.metaplex\n        .operations()\n        .execute(createListingOperation(this.addAH(input)), scope);\n      scope.throwIfCanceled();\n\n      try {\n        const listing = await this.findListingByAddress(\n          output.sellerTradeState\n        ).run(scope);\n        return { listing, ...output };\n      } catch (error) {\n        // Fallback to manually creating a listing from inputs and outputs.\n      }\n\n      scope.throwIfCanceled();\n      const lazyListing: LazyListing = {\n        model: 'listing',\n        lazy: true,\n        auctionHouse: this.auctionHouse,\n        tradeStateAddress: output.sellerTradeState,\n        bookkeeperAddress: output.bookkeeper,\n        sellerAddress: output.seller,\n        metadataAddress: output.metadata,\n        receiptAddress: output.receipt,\n        purchaseReceiptAddress: null,\n        price: output.price,\n        tokens: output.tokens.basisPoints,\n        createdAt: now(),\n        canceledAt: null,\n      };\n\n      return {\n        listing: await this.loadListing(lazyListing).run(scope),\n        ...output,\n      };\n    });\n  }\n\n  findListingByAddress(\n    address: PublicKey,\n    options: Omit<FindListingByAddressInput, 'address' | 'auctionHouse'> = {}\n  ) {\n    return this.metaplex.operations().getTask(\n      findListingByAddressOperation({\n        address,\n        auctionHouse: this.auctionHouse,\n        ...options,\n      })\n    );\n  }\n\n  loadListing(\n    lazyListing: LazyListing,\n    options: Omit<LoadListingInput, 'lazyListing'> = {}\n  ): Task<Listing> {\n    return this.metaplex\n      .operations()\n      .getTask(loadListingOperation({ lazyListing, ...options }));\n  }\n\n  bid(input: WithoutAH<CreateBidInput>): Task<CreateBidOutput & { bid: Bid }> {\n    return new Task(async (scope) => {\n      const output = await this.metaplex\n        .operations()\n        .execute(createBidOperation(this.addAH(input)), scope);\n      scope.throwIfCanceled();\n\n      try {\n        const bid = await this.findBidByAddress(output.buyerTradeState).run(\n          scope\n        );\n        return { bid, ...output };\n      } catch (error) {\n        // Fallback to manually creating a bid from inputs and outputs.\n      }\n\n      scope.throwIfCanceled();\n      const lazyBid: LazyBid = {\n        model: 'bid',\n        lazy: true,\n        auctionHouse: this.auctionHouse,\n        tradeStateAddress: output.buyerTradeState,\n        bookkeeperAddress: output.bookkeeper,\n        tokenAddress: output.tokenAccount,\n        buyerAddress: output.buyer,\n        metadataAddress: output.metadata,\n        receiptAddress: output.receipt,\n        purchaseReceiptAddress: null,\n        isPublic: Boolean(output.tokenAccount),\n        price: output.price,\n        tokens: output.tokens.basisPoints,\n        createdAt: now(),\n        canceledAt: null,\n      };\n\n      return {\n        bid: await this.loadBid(lazyBid).run(scope),\n        ...output,\n      };\n    });\n  }\n\n  findBidByAddress(\n    address: PublicKey,\n    options: Omit<FindBidByAddressInput, 'address' | 'auctionHouse'> = {}\n  ) {\n    return this.metaplex.operations().getTask(\n      findBidByAddressOperation({\n        address,\n        auctionHouse: this.auctionHouse,\n        ...options,\n      })\n    );\n  }\n\n  loadBid(\n    lazyBid: LazyBid,\n    options: Omit<LoadBidInput, 'lazyBid'> = {}\n  ): Task<Bid> {\n    return this.metaplex\n      .operations()\n      .getTask(loadBidOperation({ lazyBid, ...options }));\n  }\n\n  protected addAH<T>(input: WithoutAH<T>): T {\n    return {\n      auctionHouse: this.auctionHouse,\n      auctioneerAuthority: this.auctioneerAuthority,\n      ...input,\n    } as unknown as T;\n  }\n}\n"],"names":["AuctionHouseClient","constructor","metaplex","auctionHouse","auctioneerAuthority","executeSale","input","Task","scope","output","operations","execute","executeSaleOperation","addAH","throwIfCanceled","purchase","findPurchaseByAddress","sellerTradeState","buyerTradeState","run","error","lazyPurchase","model","lazy","buyerAddress","buyer","sellerAddress","seller","metadataAddress","metadata","bookkeeperAddress","bookkeeper","receiptAddress","receipt","price","tokens","basisPoints","createdAt","now","loadPurchase","options","getTask","findPurchaseByAddressOperation","loadPurchaseOperation","list","createListingOperation","listing","findListingByAddress","lazyListing","tradeStateAddress","purchaseReceiptAddress","canceledAt","loadListing","address","findListingByAddressOperation","loadListingOperation","bid","createBidOperation","findBidByAddress","lazyBid","tokenAddress","tokenAccount","isPublic","Boolean","loadBid","findBidByAddressOperation","loadBidOperation"],"mappings":"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"}