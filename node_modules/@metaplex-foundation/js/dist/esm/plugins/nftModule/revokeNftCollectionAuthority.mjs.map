{"version":3,"file":"revokeNftCollectionAuthority.mjs","sources":["../../../../src/plugins/nftModule/revokeNftCollectionAuthority.ts"],"sourcesContent":["import { Metaplex } from '@/Metaplex';\nimport { Operation, OperationHandler, Signer, useOperation } from '@/types';\nimport { TransactionBuilder } from '@/utils';\nimport { createRevokeCollectionAuthorityInstruction } from '@metaplex-foundation/mpl-token-metadata';\nimport { ConfirmOptions, PublicKey } from '@solana/web3.js';\nimport { SendAndConfirmTransactionResponse } from '../rpcModule';\nimport { HasMintAddress, toMintAddress } from './helpers';\nimport type { NftBuildersClient } from './NftBuildersClient';\nimport type { NftClient } from './NftClient';\nimport { findCollectionAuthorityRecordPda, findMetadataPda } from './pdas';\n\n// -----------------\n// Clients\n// -----------------\n\n/** @internal */\nexport function _revokeNftCollectionAuthorityClient(\n  this: NftClient,\n  nftOrSft: HasMintAddress,\n  collectionAuthority: PublicKey,\n  input: Omit<\n    RevokeNftCollectionAuthorityInput,\n    'mintAddress' | 'collectionAuthority'\n  > = {}\n) {\n  return this.metaplex.operations().getTask(\n    revokeNftCollectionAuthorityOperation({\n      ...input,\n      mintAddress: toMintAddress(nftOrSft),\n      collectionAuthority,\n    })\n  );\n}\n\n/** @internal */\nexport function _revokeNftCollectionAuthorityBuildersClient(\n  this: NftBuildersClient,\n  input: RevokeNftCollectionAuthorityBuilderParams\n) {\n  return revokeNftCollectionAuthorityBuilder(this.metaplex, input);\n}\n\n// -----------------\n// Operation\n// -----------------\n\nconst Key = 'RevokeNftCollectionAuthorityOperation' as const;\nexport const revokeNftCollectionAuthorityOperation =\n  useOperation<RevokeNftCollectionAuthorityOperation>(Key);\nexport type RevokeNftCollectionAuthorityOperation = Operation<\n  typeof Key,\n  RevokeNftCollectionAuthorityInput,\n  RevokeNftCollectionAuthorityOutput\n>;\n\nexport interface RevokeNftCollectionAuthorityInput {\n  // Accounts.\n  mintAddress: PublicKey;\n  collectionAuthority: PublicKey;\n  revokeAuthority?: Signer; // Can be the update authority of the delegated collection authority. Defaults to mx.identity().\n\n  // Options.\n  confirmOptions?: ConfirmOptions;\n}\n\nexport interface RevokeNftCollectionAuthorityOutput {\n  response: SendAndConfirmTransactionResponse;\n}\n\n// -----------------\n// Handler\n// -----------------\n\nexport const revokeNftCollectionAuthorityOperationHandler: OperationHandler<RevokeNftCollectionAuthorityOperation> =\n  {\n    handle: async (\n      operation: RevokeNftCollectionAuthorityOperation,\n      metaplex: Metaplex\n    ): Promise<RevokeNftCollectionAuthorityOutput> => {\n      return revokeNftCollectionAuthorityBuilder(\n        metaplex,\n        operation.input\n      ).sendAndConfirm(metaplex, operation.input.confirmOptions);\n    },\n  };\n\n// -----------------\n// Builder\n// -----------------\n\nexport type RevokeNftCollectionAuthorityBuilderParams = Omit<\n  RevokeNftCollectionAuthorityInput,\n  'confirmOptions'\n> & {\n  instructionKey?: string;\n};\n\nexport const revokeNftCollectionAuthorityBuilder = (\n  metaplex: Metaplex,\n  params: RevokeNftCollectionAuthorityBuilderParams\n): TransactionBuilder => {\n  const {\n    mintAddress,\n    collectionAuthority,\n    revokeAuthority = metaplex.identity(),\n  } = params;\n  const metadata = findMetadataPda(mintAddress);\n  const collectionAuthorityRecord = findCollectionAuthorityRecordPda(\n    mintAddress,\n    collectionAuthority\n  );\n\n  const instruction = createRevokeCollectionAuthorityInstruction({\n    collectionAuthorityRecord,\n    delegateAuthority: collectionAuthority,\n    revokeAuthority: revokeAuthority.publicKey,\n    metadata,\n    mint: mintAddress,\n  });\n\n  // Temporary fix. The Shank macro wrongfully ask for the delegateAuthority to be a signer.\n  // https://github.com/metaplex-foundation/metaplex-program-library/pull/639\n  instruction.keys[1].isSigner = false;\n\n  return (\n    TransactionBuilder.make()\n\n      // Revoke the collection authority.\n      .add({\n        instruction,\n        signers: [revokeAuthority],\n        key: params.instructionKey ?? 'revokeCollectionAuthority',\n      })\n  );\n};\n"],"names":["_revokeNftCollectionAuthorityClient","nftOrSft","collectionAuthority","input","metaplex","operations","getTask","revokeNftCollectionAuthorityOperation","mintAddress","toMintAddress","_revokeNftCollectionAuthorityBuildersClient","revokeNftCollectionAuthorityBuilder","Key","useOperation","revokeNftCollectionAuthorityOperationHandler","handle","operation","sendAndConfirm","confirmOptions","params","revokeAuthority","identity","metadata","findMetadataPda","collectionAuthorityRecord","findCollectionAuthorityRecordPda","instruction","createRevokeCollectionAuthorityInstruction","delegateAuthority","publicKey","mint","keys","isSigner","TransactionBuilder","make","add","signers","key","instructionKey"],"mappings":";;;;;;AAYA;AACA;;AAEA;;AACO,SAASA,mCAAT,CAELC,QAFK,EAGLC,mBAHK,EAILC,KAGC,GAAG,EAPC,EAQL;EACA,OAAO,IAAA,CAAKC,QAAL,CAAcC,UAAd,EAAA,CAA2BC,OAA3B,CACLC,qCAAqC,CAAC,EACpC,GAAGJ,KADiC;AAEpCK,IAAAA,WAAW,EAAEC,aAAa,CAACR,QAAD,CAFU;AAGpCC,IAAAA,mBAAAA;AAHoC,GAAD,CADhC,CAAP,CAAA;AAOD,CAAA;AAED;;AACO,SAASQ,2CAAT,CAELP,KAFK,EAGL;AACA,EAAA,OAAOQ,mCAAmC,CAAC,IAAA,CAAKP,QAAN,EAAgBD,KAAhB,CAA1C,CAAA;AACD;AAGD;AACA;;AAEA,MAAMS,GAAG,GAAG,uCAAZ,CAAA;MACaL,qCAAqC,GAChDM,YAAY,CAAwCD,GAAxC,EADP;AAsBP;AACA;AACA;AAEO,MAAME,4CAAqG,GAChH;AACEC,EAAAA,MAAM,EAAE,OACNC,SADM,EAENZ,QAFM,KAG0C;AAChD,IAAA,OAAOO,mCAAmC,CACxCP,QADwC,EAExCY,SAAS,CAACb,KAF8B,CAAnC,CAGLc,cAHK,CAGUb,QAHV,EAGoBY,SAAS,CAACb,KAAV,CAAgBe,cAHpC,CAAP,CAAA;AAID,GAAA;AATH;AAaF;AACA;;MASaP,mCAAmC,GAAG,CACjDP,QADiD,EAEjDe,MAFiD,KAG1B;AAAA,EAAA,IAAA,qBAAA,CAAA;;EACvB,MAAM;IACJX,WADI;IAEJN,mBAFI;IAGJkB,eAAe,GAAGhB,QAAQ,CAACiB,QAAT,EAAA;AAHd,GAAA,GAIFF,MAJJ,CAAA;AAKA,EAAA,MAAMG,QAAQ,GAAGC,eAAe,CAACf,WAAD,CAAhC,CAAA;AACA,EAAA,MAAMgB,yBAAyB,GAAGC,gCAAgC,CAChEjB,WADgE,EAEhEN,mBAFgE,CAAlE,CAAA;EAKA,MAAMwB,WAAW,GAAGC,0CAA0C,CAAC;IAC7DH,yBAD6D;AAE7DI,IAAAA,iBAAiB,EAAE1B,mBAF0C;IAG7DkB,eAAe,EAAEA,eAAe,CAACS,SAH4B;IAI7DP,QAJ6D;AAK7DQ,IAAAA,IAAI,EAAEtB,WAAAA;GALsD,CAA9D,CAZuB;AAqBvB;;AACAkB,EAAAA,WAAW,CAACK,IAAZ,CAAiB,CAAjB,CAAoBC,CAAAA,QAApB,GAA+B,KAA/B,CAAA;EAEA,OACEC,kBAAkB,CAACC,IAAnB,EAEE;AAFF,GAGGC,GAHH,CAGO;IACHT,WADG;IAEHU,OAAO,EAAE,CAAChB,eAAD,CAFN;AAGHiB,IAAAA,GAAG,EAAElB,CAAAA,qBAAAA,GAAAA,MAAM,CAACmB,cAAT,MAA2B,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAAA,2BAAA;AAH3B,GAHP,CADF,CAAA;AAUD;;;;"}