import { useOperation } from '../../types/Operation.mjs';
import { toTokenAccount } from '../tokenModule/accounts.mjs';

// -----------------
// Clients
// -----------------

/** @internal */
function _findNftByTokenClient(token, options) {
  return this.metaplex.operations().getTask(findNftByTokenOperation({
    token,
    ...options
  }));
} // -----------------
// Operation
// -----------------

const Key = 'FindNftByTokenOperation';
const findNftByTokenOperation = useOperation(Key);
// -----------------
// Handler
// -----------------
const findNftByTokenOperationHandler = {
  handle: async (operation, metaplex, scope) => {
    const token = toTokenAccount(await metaplex.rpc().getAccount(operation.input.token));
    scope.throwIfCanceled();
    const asset = await metaplex.nfts().findByMint(token.data.mint, { ...operation.input,
      tokenAddress: operation.input.token
    }).run(scope);
    return asset;
  }
};

export { _findNftByTokenClient, findNftByTokenOperation, findNftByTokenOperationHandler };
//# sourceMappingURL=findNftByToken.mjs.map
