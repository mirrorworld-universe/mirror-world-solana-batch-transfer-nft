import { useOperation } from '../../types/Operation.mjs';

// -----------------
// Clients
// -----------------

/** @internal */
function _loadMetadataClient(metadata, options) {
  return this.metaplex.operations().getTask(loadMetadataOperation({
    metadata,
    ...options
  }));
} // -----------------
// Operation
// -----------------

const Key = 'LoadMetadataOperation';
const loadMetadataOperation = useOperation(Key);
// -----------------
// Handler
// -----------------
const loadMetadataOperationHandler = {
  handle: async (operation, metaplex, scope) => {
    const {
      metadata,
      loadJsonMetadata = true
    } = operation.input;
    let nftOrSft = await metaplex.nfts().findByMint(metadata.mintAddress, { ...operation.input,
      loadJsonMetadata: !metadata.jsonLoaded && loadJsonMetadata
    }).run(scope);

    if (!nftOrSft.jsonLoaded && metadata.jsonLoaded) {
      nftOrSft = { ...nftOrSft,
        json: metadata.json,
        jsonLoaded: true
      };
    }

    return nftOrSft;
  }
};

export { _loadMetadataClient, loadMetadataOperation, loadMetadataOperationHandler };
//# sourceMappingURL=loadMetadata.mjs.map
