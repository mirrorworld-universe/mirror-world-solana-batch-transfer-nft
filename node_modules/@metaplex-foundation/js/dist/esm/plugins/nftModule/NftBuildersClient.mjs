import { defineProperty as _defineProperty } from '../../_virtual/_rollupPluginBabelHelpers.mjs';
import { _approveNftCollectionAuthorityBuildersClient } from './approveNftCollectionAuthority.mjs';
import { _approveNftUseAuthorityBuildersClient } from './approveNftUseAuthority.mjs';
import { _createNftBuildersClient } from './createNft.mjs';
import { _createSftBuildersClient } from './createSft.mjs';
import { _deleteNftBuildersClient } from './deleteNft.mjs';
import { _freezeDelegatedNftBuildersClient } from './freezeDelegatedNft.mjs';
import { _migrateToSizedCollectionNftBuildersClient } from './migrateToSizedCollectionNft.mjs';
import { _printNewEditionBuildersClient } from './printNewEdition.mjs';
import { _revokeNftCollectionAuthorityBuildersClient } from './revokeNftCollectionAuthority.mjs';
import { _revokeNftUseAuthorityBuildersClient } from './revokeNftUseAuthority.mjs';
import { _thawDelegatedNftBuildersClient } from './thawDelegatedNft.mjs';
import { _unverifyNftCollectionBuildersClient } from './unverifyNftCollection.mjs';
import { _unverifyNftCreatorBuildersClient } from './unverifyNftCreator.mjs';
import { _updateNftBuildersClient } from './updateNft.mjs';
import { _useNftBuildersClient } from './useNft.mjs';
import { _verifyNftCollectionBuildersClient } from './verifyNftCollection.mjs';
import { _verifyNftCreatorBuildersClient } from './verifyNftCreator.mjs';

class NftBuildersClient {
  constructor(metaplex) {
    _defineProperty(this, "create", _createNftBuildersClient);

    _defineProperty(this, "createSft", _createSftBuildersClient);

    _defineProperty(this, "printNewEdition", _printNewEditionBuildersClient);

    _defineProperty(this, "update", _updateNftBuildersClient);

    _defineProperty(this, "delete", _deleteNftBuildersClient);

    _defineProperty(this, "use", _useNftBuildersClient);

    _defineProperty(this, "approveUseAuthority", _approveNftUseAuthorityBuildersClient);

    _defineProperty(this, "revokeUseAuthority", _revokeNftUseAuthorityBuildersClient);

    _defineProperty(this, "verifyCreator", _verifyNftCreatorBuildersClient);

    _defineProperty(this, "unverifyCreator", _unverifyNftCreatorBuildersClient);

    _defineProperty(this, "verifyCollection", _verifyNftCollectionBuildersClient);

    _defineProperty(this, "unverifyCollection", _unverifyNftCollectionBuildersClient);

    _defineProperty(this, "approveCollectionAuthority", _approveNftCollectionAuthorityBuildersClient);

    _defineProperty(this, "revokeCollectionAuthority", _revokeNftCollectionAuthorityBuildersClient);

    _defineProperty(this, "migrateToSizedCollection", _migrateToSizedCollectionNftBuildersClient);

    _defineProperty(this, "freezeDelegatedNft", _freezeDelegatedNftBuildersClient);

    _defineProperty(this, "thawDelegatedNft", _thawDelegatedNftBuildersClient);

    this.metaplex = metaplex;
  } // Create, Update and Delete.


}

export { NftBuildersClient };
//# sourceMappingURL=NftBuildersClient.mjs.map
