{"version":3,"file":"findTokenWithMintByAddress.mjs","sources":["../../../../src/plugins/tokenModule/findTokenWithMintByAddress.ts"],"sourcesContent":["import { Metaplex } from '@/Metaplex';\nimport { Operation, OperationHandler, useOperation } from '@/types';\nimport type { Commitment, PublicKey } from '@solana/web3.js';\nimport { toMintAccount, toTokenAccount } from './accounts';\nimport { toMint } from './Mint';\nimport { TokenWithMint, toTokenWithMint } from './Token';\nimport type { TokenClient } from './TokenClient';\n\n// -----------------\n// Clients\n// -----------------\n\n/** @internal */\nexport function _findTokenWithMintByAddressClient(\n  this: TokenClient,\n  address: PublicKey,\n  options?: Omit<FindTokenWithMintByAddressInput, 'address'>\n) {\n  return this.metaplex\n    .operations()\n    .getTask(findTokenWithMintByAddressOperation({ address, ...options }));\n}\n\n// -----------------\n// Operation\n// -----------------\n\nconst Key = 'FindTokenWithMintByAddressOperation' as const;\nexport const findTokenWithMintByAddressOperation =\n  useOperation<FindTokenWithMintByAddressOperation>(Key);\nexport type FindTokenWithMintByAddressOperation = Operation<\n  typeof Key,\n  FindTokenWithMintByAddressInput,\n  TokenWithMint\n>;\n\nexport type FindTokenWithMintByAddressInput = {\n  address: PublicKey;\n  commitment?: Commitment;\n};\n\n// -----------------\n// Handler\n// -----------------\n\nexport const findTokenWithMintByAddressOperationHandler: OperationHandler<FindTokenWithMintByAddressOperation> =\n  {\n    handle: async (\n      operation: FindTokenWithMintByAddressOperation,\n      metaplex: Metaplex\n    ): Promise<TokenWithMint> => {\n      const { address, commitment } = operation.input;\n\n      const tokenAccount = toTokenAccount(\n        await metaplex.rpc().getAccount(address, commitment)\n      );\n\n      const mintAccount = toMintAccount(\n        await metaplex.rpc().getAccount(tokenAccount.data.mint, commitment)\n      );\n\n      return toTokenWithMint(tokenAccount, toMint(mintAccount));\n    },\n  };\n"],"names":["_findTokenWithMintByAddressClient","address","options","metaplex","operations","getTask","findTokenWithMintByAddressOperation","Key","useOperation","findTokenWithMintByAddressOperationHandler","handle","operation","commitment","input","tokenAccount","toTokenAccount","rpc","getAccount","mintAccount","toMintAccount","data","mint","toTokenWithMint","toMint"],"mappings":";;;;;AAQA;AACA;AACA;;AAEA;AACO,SAASA,iCAAT,CAELC,OAFK,EAGLC,OAHK,EAIL;EACA,OAAO,IAAA,CAAKC,QAAL,CACJC,UADI,GAEJC,OAFI,CAEIC,mCAAmC,CAAC;IAAEL,OAAF;IAAW,GAAGC,OAAAA;AAAd,GAAD,CAFvC,CAAP,CAAA;AAGD;AAGD;AACA;;AAEA,MAAMK,GAAG,GAAG,qCAAZ,CAAA;MACaD,mCAAmC,GAC9CE,YAAY,CAAsCD,GAAtC,EADP;AAaP;AACA;AACA;AAEO,MAAME,0CAAiG,GAC5G;AACEC,EAAAA,MAAM,EAAE,OACNC,SADM,EAENR,QAFM,KAGqB;IAC3B,MAAM;MAAEF,OAAF;AAAWW,MAAAA,UAAAA;KAAeD,GAAAA,SAAS,CAACE,KAA1C,CAAA;AAEA,IAAA,MAAMC,YAAY,GAAGC,cAAc,CACjC,MAAMZ,QAAQ,CAACa,GAAT,EAAA,CAAeC,UAAf,CAA0BhB,OAA1B,EAAmCW,UAAnC,CAD2B,CAAnC,CAAA;AAIA,IAAA,MAAMM,WAAW,GAAGC,aAAa,CAC/B,MAAMhB,QAAQ,CAACa,GAAT,EAAA,CAAeC,UAAf,CAA0BH,YAAY,CAACM,IAAb,CAAkBC,IAA5C,EAAkDT,UAAlD,CADyB,CAAjC,CAAA;IAIA,OAAOU,eAAe,CAACR,YAAD,EAAeS,MAAM,CAACL,WAAD,CAArB,CAAtB,CAAA;AACD,GAAA;AAhBH;;;;"}