import { defineProperty as _defineProperty } from '../../_virtual/_rollupPluginBabelHelpers.mjs';
import { _approveTokenDelegateAuthorityClient } from './approveTokenDelegateAuthority.mjs';
import { _createMintClient } from './createMint.mjs';
import { _createTokenClient } from './createToken.mjs';
import { _createTokenWithMintClient } from './createTokenWithMint.mjs';
import { _findMintByAddressClient } from './findMintByAddress.mjs';
import { _findTokenByAddressClient } from './findTokenByAddress.mjs';
import { _findTokenWithMintByAddressClient } from './findTokenWithMintByAddress.mjs';
import { _findTokenWithMintByMintClient } from './findTokenWithMintByMint.mjs';
import { _freezeTokensClient } from './freezeTokens.mjs';
import { _mintTokensClient } from './mintTokens.mjs';
import { _revokeTokenDelegateAuthorityClient } from './revokeTokenDelegateAuthority.mjs';
import { _sendTokensClient } from './sendTokens.mjs';
import { _thawTokensClient } from './thawTokens.mjs';
import { TokenBuildersClient } from './TokenBuildersClient.mjs';

class TokenClient {
  constructor(metaplex) {
    _defineProperty(this, "findMintByAddress", _findMintByAddressClient);

    _defineProperty(this, "findTokenByAddress", _findTokenByAddressClient);

    _defineProperty(this, "findTokenWithMintByAddress", _findTokenWithMintByAddressClient);

    _defineProperty(this, "findTokenWithMintByMint", _findTokenWithMintByMintClient);

    _defineProperty(this, "createMint", _createMintClient);

    _defineProperty(this, "createToken", _createTokenClient);

    _defineProperty(this, "createTokenWithMint", _createTokenWithMintClient);

    _defineProperty(this, "mint", _mintTokensClient);

    _defineProperty(this, "send", _sendTokensClient);

    _defineProperty(this, "freeze", _freezeTokensClient);

    _defineProperty(this, "thaw", _thawTokensClient);

    _defineProperty(this, "approveDelegateAuthority", _approveTokenDelegateAuthorityClient);

    _defineProperty(this, "revokeDelegateAuthority", _revokeTokenDelegateAuthorityClient);

    this.metaplex = metaplex;
  }

  builders() {
    return new TokenBuildersClient(this.metaplex);
  } // Queries.


}

export { TokenClient };
//# sourceMappingURL=TokenClient.mjs.map
