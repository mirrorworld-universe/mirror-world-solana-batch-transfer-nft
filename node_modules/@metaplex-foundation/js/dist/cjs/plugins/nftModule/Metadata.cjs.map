{"version":3,"file":"Metadata.cjs","sources":["../../../../src/plugins/nftModule/Metadata.ts"],"sourcesContent":["import { BigNumber, Creator, Pda, toBigNumber } from '@/types';\nimport { assert, Option, removeEmptyChars } from '@/utils';\nimport {\n  TokenStandard,\n  UseMethod,\n} from '@metaplex-foundation/mpl-token-metadata';\nimport { PublicKey } from '@solana/web3.js';\nimport { JsonMetadata } from '../nftModule';\nimport { MetadataAccount } from './accounts';\nimport { findMetadataPda } from './pdas';\n\nexport type Metadata<Json extends object = JsonMetadata> = Readonly<{\n  model: 'metadata';\n  address: Pda;\n  mintAddress: PublicKey;\n  updateAuthorityAddress: PublicKey;\n  json: Option<Json>;\n  jsonLoaded: boolean;\n  name: string;\n  symbol: string;\n  uri: string;\n  isMutable: boolean;\n  primarySaleHappened: boolean;\n  sellerFeeBasisPoints: number;\n  editionNonce: Option<number>;\n  creators: Creator[];\n  tokenStandard: Option<TokenStandard>;\n  collection: Option<MetadataParentCollection>;\n  collectionDetails: Option<MetadataCollectionDetails>;\n  uses: Option<MetadataUses>;\n}>;\n\ntype MetadataUses = {\n  useMethod: UseMethod;\n  remaining: BigNumber;\n  total: BigNumber;\n};\n\ntype MetadataParentCollection = {\n  address: PublicKey;\n  verified: boolean;\n};\n\ntype MetadataCollectionDetails = {\n  version: 'V1';\n  size: BigNumber;\n};\n\nexport const isMetadata = (value: any): value is Metadata =>\n  typeof value === 'object' && value.model === 'metadata';\n\nexport function assertMetadata(value: any): asserts value is Metadata {\n  assert(isMetadata(value), `Expected Metadata model`);\n}\nexport const toMetadata = (\n  account: MetadataAccount,\n  json?: Option<JsonMetadata>\n): Metadata => ({\n  model: 'metadata',\n  address: findMetadataPda(account.data.mint),\n  mintAddress: account.data.mint,\n  updateAuthorityAddress: account.data.updateAuthority,\n  json: json ?? null,\n  jsonLoaded: json !== undefined,\n  name: removeEmptyChars(account.data.data.name),\n  symbol: removeEmptyChars(account.data.data.symbol),\n  uri: removeEmptyChars(account.data.data.uri),\n  isMutable: account.data.isMutable,\n  primarySaleHappened: account.data.primarySaleHappened,\n  sellerFeeBasisPoints: account.data.data.sellerFeeBasisPoints,\n  editionNonce: account.data.editionNonce,\n  creators: account.data.data.creators ?? [],\n  tokenStandard: account.data.tokenStandard,\n  collection: account.data.collection\n    ? {\n        ...account.data.collection,\n        address: account.data.collection.key,\n      }\n    : null,\n  collectionDetails: account.data.collectionDetails\n    ? {\n        version: account.data.collectionDetails.__kind,\n        size: toBigNumber(account.data.collectionDetails.size),\n      }\n    : null,\n  uses: account.data.uses\n    ? {\n        ...account.data.uses,\n        remaining: toBigNumber(account.data.uses.remaining),\n        total: toBigNumber(account.data.uses.total),\n      }\n    : null,\n});\n"],"names":["isMetadata","value","model","assertMetadata","assert","toMetadata","account","json","address","findMetadataPda","data","mint","mintAddress","updateAuthorityAddress","updateAuthority","jsonLoaded","undefined","name","removeEmptyChars","symbol","uri","isMutable","primarySaleHappened","sellerFeeBasisPoints","editionNonce","creators","tokenStandard","collection","key","collectionDetails","version","__kind","size","toBigNumber","uses","remaining","total"],"mappings":";;;;;;;;;AAgDaA,MAAAA,UAAU,GAAIC,KAAD,IACxB,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACC,KAAN,KAAgB,WADxC;AAGA,SAASC,cAAT,CAAwBF,KAAxB,EAA+D;AACpEG,EAAAA,iBAAM,CAACJ,UAAU,CAACC,KAAD,CAAX,EAAqB,yBAArB,CAAN,CAAA;AACD,CAAA;MACYI,UAAU,GAAG,CACxBC,OADwB,EAExBC,IAFwB,KAAA;AAAA,EAAA,IAAA,qBAAA,CAAA;;EAAA,OAGV;AACdL,IAAAA,KAAK,EAAE,UADO;IAEdM,OAAO,EAAEC,oBAAe,CAACH,OAAO,CAACI,IAAR,CAAaC,IAAd,CAFV;AAGdC,IAAAA,WAAW,EAAEN,OAAO,CAACI,IAAR,CAAaC,IAHZ;AAIdE,IAAAA,sBAAsB,EAAEP,OAAO,CAACI,IAAR,CAAaI,eAJvB;AAKdP,IAAAA,IAAI,EAAEA,IAAF,KAAA,IAAA,IAAEA,IAAF,KAAEA,KAAAA,CAAAA,GAAAA,IAAF,GAAU,IALA;IAMdQ,UAAU,EAAER,IAAI,KAAKS,SANP;IAOdC,IAAI,EAAEC,uBAAgB,CAACZ,OAAO,CAACI,IAAR,CAAaA,IAAb,CAAkBO,IAAnB,CAPR;IAQdE,MAAM,EAAED,uBAAgB,CAACZ,OAAO,CAACI,IAAR,CAAaA,IAAb,CAAkBS,MAAnB,CARV;IASdC,GAAG,EAAEF,uBAAgB,CAACZ,OAAO,CAACI,IAAR,CAAaA,IAAb,CAAkBU,GAAnB,CATP;AAUdC,IAAAA,SAAS,EAAEf,OAAO,CAACI,IAAR,CAAaW,SAVV;AAWdC,IAAAA,mBAAmB,EAAEhB,OAAO,CAACI,IAAR,CAAaY,mBAXpB;AAYdC,IAAAA,oBAAoB,EAAEjB,OAAO,CAACI,IAAR,CAAaA,IAAb,CAAkBa,oBAZ1B;AAadC,IAAAA,YAAY,EAAElB,OAAO,CAACI,IAAR,CAAac,YAbb;IAcdC,QAAQ,EAAA,CAAA,qBAAA,GAAEnB,OAAO,CAACI,IAAR,CAAaA,IAAb,CAAkBe,QAApB,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAAgC,EAd1B;AAedC,IAAAA,aAAa,EAAEpB,OAAO,CAACI,IAAR,CAAagB,aAfd;AAgBdC,IAAAA,UAAU,EAAErB,OAAO,CAACI,IAAR,CAAaiB,UAAb,GACR,EACE,GAAGrB,OAAO,CAACI,IAAR,CAAaiB,UADlB;AAEEnB,MAAAA,OAAO,EAAEF,OAAO,CAACI,IAAR,CAAaiB,UAAb,CAAwBC,GAAAA;AAFnC,KADQ,GAKR,IArBU;AAsBdC,IAAAA,iBAAiB,EAAEvB,OAAO,CAACI,IAAR,CAAamB,iBAAb,GACf;AACEC,MAAAA,OAAO,EAAExB,OAAO,CAACI,IAAR,CAAamB,iBAAb,CAA+BE,MAD1C;MAEEC,IAAI,EAAEC,qBAAW,CAAC3B,OAAO,CAACI,IAAR,CAAamB,iBAAb,CAA+BG,IAAhC,CAAA;AAFnB,KADe,GAKf,IA3BU;AA4BdE,IAAAA,IAAI,EAAE5B,OAAO,CAACI,IAAR,CAAawB,IAAb,GACF,EACE,GAAG5B,OAAO,CAACI,IAAR,CAAawB,IADlB;MAEEC,SAAS,EAAEF,qBAAW,CAAC3B,OAAO,CAACI,IAAR,CAAawB,IAAb,CAAkBC,SAAnB,CAFxB;MAGEC,KAAK,EAAEH,qBAAW,CAAC3B,OAAO,CAACI,IAAR,CAAawB,IAAb,CAAkBE,KAAnB,CAAA;AAHpB,KADE,GAMF,IAAA;GArCoB,CAAA;AAAA;;;;;;"}