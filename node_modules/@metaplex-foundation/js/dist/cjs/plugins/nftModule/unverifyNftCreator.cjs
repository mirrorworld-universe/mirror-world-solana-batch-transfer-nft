'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var mplTokenMetadata = require('@metaplex-foundation/mpl-token-metadata');
var pdas = require('./pdas.cjs');
var helpers = require('./helpers.cjs');
var Operation = require('../../types/Operation.cjs');
var TransactionBuilder = require('../../utils/TransactionBuilder.cjs');

// Clients
// -----------------

/** @internal */

function _unverifyNftCreatorClient(nftOrSft, creator, input = {}) {
  return this.metaplex.operations().getTask(unverifyNftCreatorOperation({ ...input,
    mintAddress: helpers.toMintAddress(nftOrSft),
    creator
  }));
}
/** @internal */

function _unverifyNftCreatorBuildersClient(input) {
  return unverifyNftCreatorBuilder(this.metaplex, input);
} // -----------------
// Operation
// -----------------

const Key = 'UnverifyNftCreatorOperation';
const unverifyNftCreatorOperation = Operation.useOperation(Key);
// -----------------
// Handler
// -----------------
const unverifyNftCreatorOperationHandler = {
  handle: async (operation, metaplex) => {
    return unverifyNftCreatorBuilder(metaplex, operation.input).sendAndConfirm(metaplex, operation.input.confirmOptions);
  }
}; // -----------------
// Builder
// -----------------

const unverifyNftCreatorBuilder = (metaplex, params) => {
  var _params$instructionKe;

  const {
    mintAddress,
    creator = metaplex.identity()
  } = params;
  return TransactionBuilder.TransactionBuilder.make() // Verify the creator.
  .add({
    instruction: mplTokenMetadata.createRemoveCreatorVerificationInstruction({
      metadata: pdas.findMetadataPda(mintAddress),
      creator: creator.publicKey
    }),
    signers: [creator],
    key: (_params$instructionKe = params.instructionKey) !== null && _params$instructionKe !== void 0 ? _params$instructionKe : 'unverifyCreator'
  });
};

exports._unverifyNftCreatorBuildersClient = _unverifyNftCreatorBuildersClient;
exports._unverifyNftCreatorClient = _unverifyNftCreatorClient;
exports.unverifyNftCreatorBuilder = unverifyNftCreatorBuilder;
exports.unverifyNftCreatorOperation = unverifyNftCreatorOperation;
exports.unverifyNftCreatorOperationHandler = unverifyNftCreatorOperationHandler;
//# sourceMappingURL=unverifyNftCreator.cjs.map
