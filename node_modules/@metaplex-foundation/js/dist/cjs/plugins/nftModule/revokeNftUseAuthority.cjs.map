{"version":3,"file":"revokeNftUseAuthority.cjs","sources":["../../../../src/plugins/nftModule/revokeNftUseAuthority.ts"],"sourcesContent":["import { Metaplex } from '@/Metaplex';\nimport { Operation, OperationHandler, Signer, useOperation } from '@/types';\nimport { TransactionBuilder } from '@/utils';\nimport { createRevokeUseAuthorityInstruction } from '@metaplex-foundation/mpl-token-metadata';\nimport { ConfirmOptions, PublicKey, SystemProgram } from '@solana/web3.js';\nimport { SendAndConfirmTransactionResponse } from '../rpcModule';\nimport { findAssociatedTokenAccountPda, TokenProgram } from '../tokenModule';\nimport { HasMintAddress, toMintAddress } from './helpers';\nimport type { NftBuildersClient } from './NftBuildersClient';\nimport type { NftClient } from './NftClient';\nimport { findMetadataPda, findUseAuthorityRecordPda } from './pdas';\n\n// -----------------\n// Clients\n// -----------------\n\n/** @internal */\nexport function _revokeNftUseAuthorityClient(\n  this: NftClient,\n  nftOrSft: HasMintAddress,\n  user: PublicKey,\n  input: Omit<RevokeNftUseAuthorityInput, 'mintAddress' | 'user'> = {}\n) {\n  return this.metaplex.operations().getTask(\n    revokeNftUseAuthorityOperation({\n      ...input,\n      mintAddress: toMintAddress(nftOrSft),\n      user,\n    })\n  );\n}\n\n/** @internal */\nexport function _revokeNftUseAuthorityBuildersClient(\n  this: NftBuildersClient,\n  input: RevokeNftUseAuthorityBuilderParams\n) {\n  return revokeNftUseAuthorityBuilder(this.metaplex, input);\n}\n\n// -----------------\n// Operation\n// -----------------\n\nconst Key = 'RevokeNftUseAuthorityOperation' as const;\nexport const revokeNftUseAuthorityOperation =\n  useOperation<RevokeNftUseAuthorityOperation>(Key);\nexport type RevokeNftUseAuthorityOperation = Operation<\n  typeof Key,\n  RevokeNftUseAuthorityInput,\n  RevokeNftUseAuthorityOutput\n>;\n\nexport interface RevokeNftUseAuthorityInput {\n  // Accounts.\n  mintAddress: PublicKey;\n  user: PublicKey;\n  owner?: Signer; // Defaults to mx.identity().\n  ownerTokenAddress?: PublicKey; // Defaults to associated token address.\n\n  // Programs.\n  tokenProgram?: PublicKey;\n  systemProgram?: PublicKey;\n\n  // Options.\n  confirmOptions?: ConfirmOptions;\n}\n\nexport interface RevokeNftUseAuthorityOutput {\n  response: SendAndConfirmTransactionResponse;\n}\n\n// -----------------\n// Handler\n// -----------------\n\nexport const revokeNftUseAuthorityOperationHandler: OperationHandler<RevokeNftUseAuthorityOperation> =\n  {\n    handle: async (\n      operation: RevokeNftUseAuthorityOperation,\n      metaplex: Metaplex\n    ): Promise<RevokeNftUseAuthorityOutput> => {\n      return revokeNftUseAuthorityBuilder(\n        metaplex,\n        operation.input\n      ).sendAndConfirm(metaplex, operation.input.confirmOptions);\n    },\n  };\n\n// -----------------\n// Builder\n// -----------------\n\nexport type RevokeNftUseAuthorityBuilderParams = Omit<\n  RevokeNftUseAuthorityInput,\n  'confirmOptions'\n> & {\n  instructionKey?: string;\n};\n\nexport const revokeNftUseAuthorityBuilder = (\n  metaplex: Metaplex,\n  params: RevokeNftUseAuthorityBuilderParams\n): TransactionBuilder => {\n  const { mintAddress, user, owner = metaplex.identity() } = params;\n  const metadata = findMetadataPda(mintAddress);\n  const useAuthorityRecord = findUseAuthorityRecordPda(mintAddress, user);\n  const ownerTokenAddress =\n    params.ownerTokenAddress ??\n    findAssociatedTokenAccountPda(mintAddress, owner.publicKey);\n\n  return (\n    TransactionBuilder.make()\n\n      // Revoke the use authority.\n      .add({\n        instruction: createRevokeUseAuthorityInstruction({\n          useAuthorityRecord,\n          owner: owner.publicKey,\n          user,\n          ownerTokenAccount: ownerTokenAddress,\n          mint: mintAddress,\n          metadata,\n          tokenProgram: params.tokenProgram ?? TokenProgram.publicKey,\n          systemProgram: params.systemProgram ?? SystemProgram.programId,\n        }),\n        signers: [owner],\n        key: params.instructionKey ?? 'revokeUseAuthority',\n      })\n  );\n};\n"],"names":["_revokeNftUseAuthorityClient","nftOrSft","user","input","metaplex","operations","getTask","revokeNftUseAuthorityOperation","mintAddress","toMintAddress","_revokeNftUseAuthorityBuildersClient","revokeNftUseAuthorityBuilder","Key","useOperation","revokeNftUseAuthorityOperationHandler","handle","operation","sendAndConfirm","confirmOptions","params","owner","identity","metadata","findMetadataPda","useAuthorityRecord","findUseAuthorityRecordPda","ownerTokenAddress","findAssociatedTokenAccountPda","publicKey","TransactionBuilder","make","add","instruction","createRevokeUseAuthorityInstruction","ownerTokenAccount","mint","tokenProgram","TokenProgram","systemProgram","SystemProgram","programId","signers","key","instructionKey"],"mappings":";;;;;;;;;;;;;AAaA;AACA;;AAEA;;AACO,SAASA,4BAAT,CAELC,QAFK,EAGLC,IAHK,EAILC,KAA+D,GAAG,EAJ7D,EAKL;EACA,OAAO,IAAA,CAAKC,QAAL,CAAcC,UAAd,EAAA,CAA2BC,OAA3B,CACLC,8BAA8B,CAAC,EAC7B,GAAGJ,KAD0B;AAE7BK,IAAAA,WAAW,EAAEC,qBAAa,CAACR,QAAD,CAFG;AAG7BC,IAAAA,IAAAA;AAH6B,GAAD,CADzB,CAAP,CAAA;AAOD,CAAA;AAED;;AACO,SAASQ,oCAAT,CAELP,KAFK,EAGL;AACA,EAAA,OAAOQ,4BAA4B,CAAC,IAAA,CAAKP,QAAN,EAAgBD,KAAhB,CAAnC,CAAA;AACD;AAGD;AACA;;AAEA,MAAMS,GAAG,GAAG,gCAAZ,CAAA;MACaL,8BAA8B,GACzCM,sBAAY,CAAiCD,GAAjC,EADP;AA2BP;AACA;AACA;AAEO,MAAME,qCAAuF,GAClG;AACEC,EAAAA,MAAM,EAAE,OACNC,SADM,EAENZ,QAFM,KAGmC;AACzC,IAAA,OAAOO,4BAA4B,CACjCP,QADiC,EAEjCY,SAAS,CAACb,KAFuB,CAA5B,CAGLc,cAHK,CAGUb,QAHV,EAGoBY,SAAS,CAACb,KAAV,CAAgBe,cAHpC,CAAP,CAAA;AAID,GAAA;AATH;AAaF;AACA;;MASaP,4BAA4B,GAAG,CAC1CP,QAD0C,EAE1Ce,MAF0C,KAGnB;AAAA,EAAA,IAAA,qBAAA,EAAA,oBAAA,EAAA,qBAAA,EAAA,qBAAA,CAAA;;EACvB,MAAM;IAAEX,WAAF;IAAeN,IAAf;IAAqBkB,KAAK,GAAGhB,QAAQ,CAACiB,QAAT,EAAA;AAA7B,GAAA,GAAqDF,MAA3D,CAAA;AACA,EAAA,MAAMG,QAAQ,GAAGC,oBAAe,CAACf,WAAD,CAAhC,CAAA;AACA,EAAA,MAAMgB,kBAAkB,GAAGC,8BAAyB,CAACjB,WAAD,EAAcN,IAAd,CAApD,CAAA;AACA,EAAA,MAAMwB,iBAAiB,GAAA,CAAA,qBAAA,GACrBP,MAAM,CAACO,iBADc,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAErBC,oCAA6B,CAACnB,WAAD,EAAcY,KAAK,CAACQ,SAApB,CAF/B,CAAA;EAIA,OACEC,qCAAkB,CAACC,IAAnB,EAEE;AAFF,GAGGC,GAHH,CAGO;IACHC,WAAW,EAAEC,oDAAmC,CAAC;MAC/CT,kBAD+C;MAE/CJ,KAAK,EAAEA,KAAK,CAACQ,SAFkC;MAG/C1B,IAH+C;AAI/CgC,MAAAA,iBAAiB,EAAER,iBAJ4B;AAK/CS,MAAAA,IAAI,EAAE3B,WALyC;MAM/Cc,QAN+C;AAO/Cc,MAAAA,YAAY,0BAAEjB,MAAM,CAACiB,YAAT,MAAyBC,IAAAA,IAAAA,oBAAAA,KAAAA,KAAAA,CAAAA,GAAAA,oBAAAA,GAAAA,oBAAY,CAACT,SAPH;AAQ/CU,MAAAA,aAAa,2BAAEnB,MAAM,CAACmB,aAAT,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAA0BC,qBAAa,CAACC,SAAAA;AARN,KAAD,CAD7C;IAWHC,OAAO,EAAE,CAACrB,KAAD,CAXN;AAYHsB,IAAAA,GAAG,EAAEvB,CAAAA,qBAAAA,GAAAA,MAAM,CAACwB,cAAT,MAA2B,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAAA,oBAAA;AAZ3B,GAHP,CADF,CAAA;AAmBD;;;;;;;;"}