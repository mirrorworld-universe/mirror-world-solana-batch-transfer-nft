{"version":3,"file":"uploadMetadata.cjs","sources":["../../../../src/plugins/nftModule/uploadMetadata.ts"],"sourcesContent":["import cloneDeep from 'lodash.clonedeep';\nimport { Metaplex } from '@/Metaplex';\nimport { Operation, OperationHandler, useOperation } from '@/types';\nimport { DisposableScope, Task, walk } from '@/utils';\nimport { JsonMetadata } from './JsonMetadata';\nimport { isMetaplexFile, MetaplexFile } from '../storageModule';\nimport type { NftClient } from './NftClient';\n\n// -----------------\n// Clients\n// -----------------\n\n/** @internal */\nexport function _uploadMetadataClient(\n  this: NftClient,\n  input: UploadMetadataInput\n): Task<UploadMetadataOutput> {\n  return this.metaplex.operations().getTask(uploadMetadataOperation(input));\n}\n\n// -----------------\n// Operation\n// -----------------\n\nconst Key = 'UploadMetadataOperation' as const;\nexport const uploadMetadataOperation =\n  useOperation<UploadMetadataOperation>(Key);\nexport type UploadMetadataOperation = Operation<\n  typeof Key,\n  UploadMetadataInput,\n  UploadMetadataOutput\n>;\n\nexport type UploadMetadataInput = JsonMetadata<MetaplexFile | string>;\n\nexport interface UploadMetadataOutput {\n  metadata: JsonMetadata;\n  assetUris: string[];\n  uri: string;\n}\n\n// -----------------\n// Handler\n// -----------------\n\nexport const uploadMetadataOperationHandler: OperationHandler<UploadMetadataOperation> =\n  {\n    handle: async (\n      operation: UploadMetadataOperation,\n      metaplex: Metaplex,\n      scope: DisposableScope\n    ): Promise<UploadMetadataOutput> => {\n      const rawMetadata = operation.input;\n      const files = getAssetsFromJsonMetadata(rawMetadata);\n      const assetUris = await metaplex.storage().uploadAll(files);\n      scope.throwIfCanceled();\n\n      const metadata = replaceAssetsWithUris(rawMetadata, assetUris);\n      const uri = await metaplex.storage().uploadJson(metadata);\n\n      return { uri, metadata, assetUris };\n    },\n  };\n\nexport const getAssetsFromJsonMetadata = (\n  input: UploadMetadataInput\n): MetaplexFile[] => {\n  const files: MetaplexFile[] = [];\n\n  walk(input, (next, value) => {\n    if (isMetaplexFile(value)) {\n      files.push(value);\n    } else {\n      next(value);\n    }\n  });\n\n  return files;\n};\n\nexport const replaceAssetsWithUris = (\n  input: UploadMetadataInput,\n  replacements: string[]\n): JsonMetadata => {\n  const clone = cloneDeep(input);\n  let index = 0;\n\n  walk(clone, (next, value, key, parent) => {\n    if (isMetaplexFile(value) && index < replacements.length) {\n      parent[key] = replacements[index++];\n    }\n\n    next(value);\n  });\n\n  return clone as JsonMetadata;\n};\n"],"names":["_uploadMetadataClient","input","metaplex","operations","getTask","uploadMetadataOperation","Key","useOperation","uploadMetadataOperationHandler","handle","operation","scope","rawMetadata","files","getAssetsFromJsonMetadata","assetUris","storage","uploadAll","throwIfCanceled","metadata","replaceAssetsWithUris","uri","uploadJson","walk","next","value","isMetaplexFile","push","replacements","clone","cloneDeep","index","key","parent","length"],"mappings":";;;;;;;;;;;;;AAQA;AACA;AACA;;AAEA;AACO,SAASA,qBAAT,CAELC,KAFK,EAGuB;EAC5B,OAAO,IAAA,CAAKC,QAAL,CAAcC,UAAd,EAAA,CAA2BC,OAA3B,CAAmCC,uBAAuB,CAACJ,KAAD,CAA1D,CAAP,CAAA;AACD;AAGD;AACA;;AAEA,MAAMK,GAAG,GAAG,yBAAZ,CAAA;MACaD,uBAAuB,GAClCE,sBAAY,CAA0BD,GAA1B,EADP;AAgBP;AACA;AACA;AAEO,MAAME,8BAAyE,GACpF;AACEC,EAAAA,MAAM,EAAE,OACNC,SADM,EAENR,QAFM,EAGNS,KAHM,KAI4B;AAClC,IAAA,MAAMC,WAAW,GAAGF,SAAS,CAACT,KAA9B,CAAA;AACA,IAAA,MAAMY,KAAK,GAAGC,yBAAyB,CAACF,WAAD,CAAvC,CAAA;IACA,MAAMG,SAAS,GAAG,MAAMb,QAAQ,CAACc,OAAT,EAAmBC,CAAAA,SAAnB,CAA6BJ,KAA7B,CAAxB,CAAA;AACAF,IAAAA,KAAK,CAACO,eAAN,EAAA,CAAA;AAEA,IAAA,MAAMC,QAAQ,GAAGC,qBAAqB,CAACR,WAAD,EAAcG,SAAd,CAAtC,CAAA;IACA,MAAMM,GAAG,GAAG,MAAMnB,QAAQ,CAACc,OAAT,EAAmBM,CAAAA,UAAnB,CAA8BH,QAA9B,CAAlB,CAAA;IAEA,OAAO;MAAEE,GAAF;MAAOF,QAAP;AAAiBJ,MAAAA,SAAAA;KAAxB,CAAA;AACD,GAAA;AAfH,EADK;AAmBMD,MAAAA,yBAAyB,GACpCb,KADuC,IAEpB;EACnB,MAAMY,KAAqB,GAAG,EAA9B,CAAA;AAEAU,EAAAA,WAAI,CAACtB,KAAD,EAAQ,CAACuB,IAAD,EAAOC,KAAP,KAAiB;AAC3B,IAAA,IAAIC,2BAAc,CAACD,KAAD,CAAlB,EAA2B;MACzBZ,KAAK,CAACc,IAAN,CAAWF,KAAX,CAAA,CAAA;AACD,KAFD,MAEO;MACLD,IAAI,CAACC,KAAD,CAAJ,CAAA;AACD,KAAA;AACF,GANG,CAAJ,CAAA;AAQA,EAAA,OAAOZ,KAAP,CAAA;AACD,EAdM;MAgBMO,qBAAqB,GAAG,CACnCnB,KADmC,EAEnC2B,YAFmC,KAGlB;AACjB,EAAA,MAAMC,KAAK,GAAGC,6BAAS,CAAC7B,KAAD,CAAvB,CAAA;EACA,IAAI8B,KAAK,GAAG,CAAZ,CAAA;EAEAR,WAAI,CAACM,KAAD,EAAQ,CAACL,IAAD,EAAOC,KAAP,EAAcO,GAAd,EAAmBC,MAAnB,KAA8B;IACxC,IAAIP,2BAAc,CAACD,KAAD,CAAd,IAAyBM,KAAK,GAAGH,YAAY,CAACM,MAAlD,EAA0D;MACxDD,MAAM,CAACD,GAAD,CAAN,GAAcJ,YAAY,CAACG,KAAK,EAAN,CAA1B,CAAA;AACD,KAAA;;IAEDP,IAAI,CAACC,KAAD,CAAJ,CAAA;AACD,GANG,CAAJ,CAAA;AAQA,EAAA,OAAOI,KAAP,CAAA;AACD;;;;;;;;"}