'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var findNftsByMintList = require('./findNftsByMintList.cjs');
var Operation = require('../../types/Operation.cjs');
var program = require('../tokenModule/program.cjs');

// -----------------
// Clients
// -----------------

/** @internal */
function _findNftsByOwnerClient(owner, options) {
  return this.metaplex.operations().getTask(findNftsByOwnerOperation({
    owner,
    ...options
  }));
} // -----------------
// Operation
// -----------------

const Key = 'FindNftsByOwnerOperation';
const findNftsByOwnerOperation = Operation.useOperation(Key);
// -----------------
// Handler
// -----------------
const findNftsByOwnerOperationHandler = {
  handle: async (operation, metaplex, scope) => {
    const {
      owner,
      commitment
    } = operation.input;
    const mints = await program.TokenProgram.tokenAccounts(metaplex).selectMint().whereOwner(owner).whereAmount(1).getDataAsPublicKeys();
    scope.throwIfCanceled();
    const nfts = await metaplex.operations().execute(findNftsByMintList.findNftsByMintListOperation({
      mints,
      commitment
    }), scope);
    scope.throwIfCanceled();
    return nfts.filter(nft => nft !== null);
  }
};

exports._findNftsByOwnerClient = _findNftsByOwnerClient;
exports.findNftsByOwnerOperation = findNftsByOwnerOperation;
exports.findNftsByOwnerOperationHandler = findNftsByOwnerOperationHandler;
//# sourceMappingURL=findNftsByOwner.cjs.map
