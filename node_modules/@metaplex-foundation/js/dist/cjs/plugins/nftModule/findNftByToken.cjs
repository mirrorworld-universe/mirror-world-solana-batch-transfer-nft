'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Operation = require('../../types/Operation.cjs');
var accounts = require('../tokenModule/accounts.cjs');

// -----------------
// Clients
// -----------------

/** @internal */
function _findNftByTokenClient(token, options) {
  return this.metaplex.operations().getTask(findNftByTokenOperation({
    token,
    ...options
  }));
} // -----------------
// Operation
// -----------------

const Key = 'FindNftByTokenOperation';
const findNftByTokenOperation = Operation.useOperation(Key);
// -----------------
// Handler
// -----------------
const findNftByTokenOperationHandler = {
  handle: async (operation, metaplex, scope) => {
    const token = accounts.toTokenAccount(await metaplex.rpc().getAccount(operation.input.token));
    scope.throwIfCanceled();
    const asset = await metaplex.nfts().findByMint(token.data.mint, { ...operation.input,
      tokenAddress: operation.input.token
    }).run(scope);
    return asset;
  }
};

exports._findNftByTokenClient = _findNftByTokenClient;
exports.findNftByTokenOperation = findNftByTokenOperation;
exports.findNftByTokenOperationHandler = findNftByTokenOperationHandler;
//# sourceMappingURL=findNftByToken.cjs.map
