'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.cjs');
var approveNftCollectionAuthority = require('./approveNftCollectionAuthority.cjs');
var approveNftUseAuthority = require('./approveNftUseAuthority.cjs');
var createNft = require('./createNft.cjs');
var createSft = require('./createSft.cjs');
var deleteNft = require('./deleteNft.cjs');
var freezeDelegatedNft = require('./freezeDelegatedNft.cjs');
var migrateToSizedCollectionNft = require('./migrateToSizedCollectionNft.cjs');
var printNewEdition = require('./printNewEdition.cjs');
var revokeNftCollectionAuthority = require('./revokeNftCollectionAuthority.cjs');
var revokeNftUseAuthority = require('./revokeNftUseAuthority.cjs');
var thawDelegatedNft = require('./thawDelegatedNft.cjs');
var unverifyNftCollection = require('./unverifyNftCollection.cjs');
var unverifyNftCreator = require('./unverifyNftCreator.cjs');
var updateNft = require('./updateNft.cjs');
var useNft = require('./useNft.cjs');
var verifyNftCollection = require('./verifyNftCollection.cjs');
var verifyNftCreator = require('./verifyNftCreator.cjs');

class NftBuildersClient {
  constructor(metaplex) {
    _rollupPluginBabelHelpers.defineProperty(this, "create", createNft._createNftBuildersClient);

    _rollupPluginBabelHelpers.defineProperty(this, "createSft", createSft._createSftBuildersClient);

    _rollupPluginBabelHelpers.defineProperty(this, "printNewEdition", printNewEdition._printNewEditionBuildersClient);

    _rollupPluginBabelHelpers.defineProperty(this, "update", updateNft._updateNftBuildersClient);

    _rollupPluginBabelHelpers.defineProperty(this, "delete", deleteNft._deleteNftBuildersClient);

    _rollupPluginBabelHelpers.defineProperty(this, "use", useNft._useNftBuildersClient);

    _rollupPluginBabelHelpers.defineProperty(this, "approveUseAuthority", approveNftUseAuthority._approveNftUseAuthorityBuildersClient);

    _rollupPluginBabelHelpers.defineProperty(this, "revokeUseAuthority", revokeNftUseAuthority._revokeNftUseAuthorityBuildersClient);

    _rollupPluginBabelHelpers.defineProperty(this, "verifyCreator", verifyNftCreator._verifyNftCreatorBuildersClient);

    _rollupPluginBabelHelpers.defineProperty(this, "unverifyCreator", unverifyNftCreator._unverifyNftCreatorBuildersClient);

    _rollupPluginBabelHelpers.defineProperty(this, "verifyCollection", verifyNftCollection._verifyNftCollectionBuildersClient);

    _rollupPluginBabelHelpers.defineProperty(this, "unverifyCollection", unverifyNftCollection._unverifyNftCollectionBuildersClient);

    _rollupPluginBabelHelpers.defineProperty(this, "approveCollectionAuthority", approveNftCollectionAuthority._approveNftCollectionAuthorityBuildersClient);

    _rollupPluginBabelHelpers.defineProperty(this, "revokeCollectionAuthority", revokeNftCollectionAuthority._revokeNftCollectionAuthorityBuildersClient);

    _rollupPluginBabelHelpers.defineProperty(this, "migrateToSizedCollection", migrateToSizedCollectionNft._migrateToSizedCollectionNftBuildersClient);

    _rollupPluginBabelHelpers.defineProperty(this, "freezeDelegatedNft", freezeDelegatedNft._freezeDelegatedNftBuildersClient);

    _rollupPluginBabelHelpers.defineProperty(this, "thawDelegatedNft", thawDelegatedNft._thawDelegatedNftBuildersClient);

    this.metaplex = metaplex;
  } // Create, Update and Delete.


}

exports.NftBuildersClient = NftBuildersClient;
//# sourceMappingURL=NftBuildersClient.cjs.map
