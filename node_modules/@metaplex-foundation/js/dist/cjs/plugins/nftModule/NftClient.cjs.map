{"version":3,"file":"NftClient.cjs","sources":["../../../../src/plugins/nftModule/NftClient.ts"],"sourcesContent":["import type { Metaplex } from '@/Metaplex';\nimport { token } from '@/types';\nimport {\n  ApproveTokenDelegateAuthorityInput,\n  RevokeTokenDelegateAuthorityInput,\n  SendTokensInput,\n} from '../tokenModule';\nimport { _approveNftCollectionAuthorityClient } from './approveNftCollectionAuthority';\nimport { _approveNftUseAuthorityClient } from './approveNftUseAuthority';\nimport { _createNftClient } from './createNft';\nimport { _createSftClient } from './createSft';\nimport { _deleteNftClient } from './deleteNft';\nimport { _findNftByMetadataClient } from './findNftByMetadata';\nimport { _findNftByMintClient, _refreshNftClient } from './findNftByMint';\nimport { _findNftByTokenClient } from './findNftByToken';\nimport { _findNftsByCreatorsClient } from './findNftsByCreator';\nimport { _findNftsByMintListClient } from './findNftsByMintList';\nimport { _findNftsByOwnerClient } from './findNftsByOwner';\nimport { _findNftsByUpdateAuthorityClient } from './findNftsByUpdateAuthority';\nimport { _freezeDelegatedNftClient } from './freezeDelegatedNft';\nimport { HasMintAddress, toMintAddress } from './helpers';\nimport { _loadMetadataClient } from './loadMetadata';\nimport { _migrateToSizedCollectionNftClient } from './migrateToSizedCollectionNft';\nimport { NftBuildersClient } from './NftBuildersClient';\nimport { _printNewEditionClient } from './printNewEdition';\nimport { _revokeNftCollectionAuthorityClient } from './revokeNftCollectionAuthority';\nimport { _revokeNftUseAuthorityClient } from './revokeNftUseAuthority';\nimport { _thawDelegatedNftClient } from './thawDelegatedNft';\nimport { _unverifyNftCollectionClient } from './unverifyNftCollection';\nimport { _unverifyNftCreatorClient } from './unverifyNftCreator';\nimport { _updateNftClient } from './updateNft';\nimport { _uploadMetadataClient } from './uploadMetadata';\nimport { _useNftClient } from './useNft';\nimport { _verifyNftCollectionClient } from './verifyNftCollection';\nimport { _verifyNftCreatorClient } from './verifyNftCreator';\n\nexport class NftClient {\n  constructor(protected readonly metaplex: Metaplex) {}\n\n  builders() {\n    return new NftBuildersClient(this.metaplex);\n  }\n\n  // Queries.\n  findByMint = _findNftByMintClient;\n  findByMetadata = _findNftByMetadataClient;\n  findByToken = _findNftByTokenClient;\n  findAllByCreator = _findNftsByCreatorsClient;\n  findAllByMintList = _findNftsByMintListClient;\n  findAllByOwner = _findNftsByOwnerClient;\n  findAllByUpdateAuthority = _findNftsByUpdateAuthorityClient;\n  refresh = _refreshNftClient;\n  load = _loadMetadataClient;\n\n  // Create, Update and Delete.\n  create = _createNftClient;\n  createSft = _createSftClient;\n  printNewEdition = _printNewEditionClient;\n  uploadMetadata = _uploadMetadataClient;\n  update = _updateNftClient;\n  delete = _deleteNftClient;\n\n  // Use.\n  use = _useNftClient;\n  approveUseAuthority = _approveNftUseAuthorityClient;\n  revokeUseAuthority = _revokeNftUseAuthorityClient;\n\n  // Creators.\n  verifyCreator = _verifyNftCreatorClient;\n  unverifyCreator = _unverifyNftCreatorClient;\n\n  // Collections.\n  verifyCollection = _verifyNftCollectionClient;\n  unverifyCollection = _unverifyNftCollectionClient;\n  approveCollectionAuthority = _approveNftCollectionAuthorityClient;\n  revokeCollectionAuthority = _revokeNftCollectionAuthorityClient;\n  migrateToSizedCollection = _migrateToSizedCollectionNftClient;\n\n  // Token.\n  freezeDelegatedNft = _freezeDelegatedNftClient;\n  thawDelegatedNft = _thawDelegatedNftClient;\n\n  // Syntactic sugar.\n  send(nftOrSft: HasMintAddress, options?: Omit<SendTokensInput, 'mint'>) {\n    return this.metaplex.tokens().send({\n      mint: toMintAddress(nftOrSft),\n      amount: token(1),\n      ...options,\n    });\n  }\n\n  approveDelegateAuthority(\n    nftOrSft: HasMintAddress,\n    options: Omit<ApproveTokenDelegateAuthorityInput, 'mintAddress'>\n  ) {\n    return this.metaplex.tokens().approveDelegateAuthority({\n      mintAddress: toMintAddress(nftOrSft),\n      ...options,\n    });\n  }\n\n  revokeDelegateAuthority(\n    nftOrSft: HasMintAddress,\n    options?: Omit<RevokeTokenDelegateAuthorityInput, 'mintAddress'>\n  ) {\n    return this.metaplex.tokens().revokeDelegateAuthority({\n      mintAddress: toMintAddress(nftOrSft),\n      ...options,\n    });\n  }\n}\n"],"names":["NftClient","constructor","metaplex","_defineProperty","_findNftByMintClient","_findNftByMetadataClient","_findNftByTokenClient","_findNftsByCreatorsClient","_findNftsByMintListClient","_findNftsByOwnerClient","_findNftsByUpdateAuthorityClient","_refreshNftClient","_loadMetadataClient","_createNftClient","_createSftClient","_printNewEditionClient","_uploadMetadataClient","_updateNftClient","_deleteNftClient","_useNftClient","_approveNftUseAuthorityClient","_revokeNftUseAuthorityClient","_verifyNftCreatorClient","_unverifyNftCreatorClient","_verifyNftCollectionClient","_unverifyNftCollectionClient","_approveNftCollectionAuthorityClient","_revokeNftCollectionAuthorityClient","_migrateToSizedCollectionNftClient","_freezeDelegatedNftClient","_thawDelegatedNftClient","builders","NftBuildersClient","send","nftOrSft","options","tokens","mint","toMintAddress","amount","token","approveDelegateAuthority","mintAddress","revokeDelegateAuthority"],"mappings":"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"}