'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.cjs');
var approveTokenDelegateAuthority = require('./approveTokenDelegateAuthority.cjs');
var createMint = require('./createMint.cjs');
var createToken = require('./createToken.cjs');
var createTokenWithMint = require('./createTokenWithMint.cjs');
var findMintByAddress = require('./findMintByAddress.cjs');
var findTokenByAddress = require('./findTokenByAddress.cjs');
var findTokenWithMintByAddress = require('./findTokenWithMintByAddress.cjs');
var findTokenWithMintByMint = require('./findTokenWithMintByMint.cjs');
var freezeTokens = require('./freezeTokens.cjs');
var mintTokens = require('./mintTokens.cjs');
var revokeTokenDelegateAuthority = require('./revokeTokenDelegateAuthority.cjs');
var sendTokens = require('./sendTokens.cjs');
var thawTokens = require('./thawTokens.cjs');
var TokenBuildersClient = require('./TokenBuildersClient.cjs');

class TokenClient {
  constructor(metaplex) {
    _rollupPluginBabelHelpers.defineProperty(this, "findMintByAddress", findMintByAddress._findMintByAddressClient);

    _rollupPluginBabelHelpers.defineProperty(this, "findTokenByAddress", findTokenByAddress._findTokenByAddressClient);

    _rollupPluginBabelHelpers.defineProperty(this, "findTokenWithMintByAddress", findTokenWithMintByAddress._findTokenWithMintByAddressClient);

    _rollupPluginBabelHelpers.defineProperty(this, "findTokenWithMintByMint", findTokenWithMintByMint._findTokenWithMintByMintClient);

    _rollupPluginBabelHelpers.defineProperty(this, "createMint", createMint._createMintClient);

    _rollupPluginBabelHelpers.defineProperty(this, "createToken", createToken._createTokenClient);

    _rollupPluginBabelHelpers.defineProperty(this, "createTokenWithMint", createTokenWithMint._createTokenWithMintClient);

    _rollupPluginBabelHelpers.defineProperty(this, "mint", mintTokens._mintTokensClient);

    _rollupPluginBabelHelpers.defineProperty(this, "send", sendTokens._sendTokensClient);

    _rollupPluginBabelHelpers.defineProperty(this, "freeze", freezeTokens._freezeTokensClient);

    _rollupPluginBabelHelpers.defineProperty(this, "thaw", thawTokens._thawTokensClient);

    _rollupPluginBabelHelpers.defineProperty(this, "approveDelegateAuthority", approveTokenDelegateAuthority._approveTokenDelegateAuthorityClient);

    _rollupPluginBabelHelpers.defineProperty(this, "revokeDelegateAuthority", revokeTokenDelegateAuthority._revokeTokenDelegateAuthorityClient);

    this.metaplex = metaplex;
  }

  builders() {
    return new TokenBuildersClient.TokenBuildersClient(this.metaplex);
  } // Queries.


}

exports.TokenClient = TokenClient;
//# sourceMappingURL=TokenClient.cjs.map
