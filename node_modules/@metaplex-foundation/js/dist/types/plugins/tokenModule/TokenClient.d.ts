import type { Metaplex } from '../../Metaplex';
import { _approveTokenDelegateAuthorityClient } from './approveTokenDelegateAuthority';
import { _createMintClient } from './createMint';
import { _createTokenClient } from './createToken';
import { _createTokenWithMintClient } from './createTokenWithMint';
import { _findMintByAddressClient } from './findMintByAddress';
import { _findTokenByAddressClient } from './findTokenByAddress';
import { _findTokenWithMintByAddressClient } from './findTokenWithMintByAddress';
import { _findTokenWithMintByMintClient } from './findTokenWithMintByMint';
import { _freezeTokensClient } from './freezeTokens';
import { _mintTokensClient } from './mintTokens';
import { _revokeTokenDelegateAuthorityClient } from './revokeTokenDelegateAuthority';
import { _sendTokensClient } from './sendTokens';
import { _thawTokensClient } from './thawTokens';
import { TokenBuildersClient } from './TokenBuildersClient';
export declare class TokenClient {
    protected readonly metaplex: Metaplex;
    constructor(metaplex: Metaplex);
    builders(): TokenBuildersClient;
    findMintByAddress: typeof _findMintByAddressClient;
    findTokenByAddress: typeof _findTokenByAddressClient;
    findTokenWithMintByAddress: typeof _findTokenWithMintByAddressClient;
    findTokenWithMintByMint: typeof _findTokenWithMintByMintClient;
    createMint: typeof _createMintClient;
    createToken: typeof _createTokenClient;
    createTokenWithMint: typeof _createTokenWithMintClient;
    mint: typeof _mintTokensClient;
    send: typeof _sendTokensClient;
    freeze: typeof _freezeTokensClient;
    thaw: typeof _thawTokensClient;
    approveDelegateAuthority: typeof _approveTokenDelegateAuthorityClient;
    revokeDelegateAuthority: typeof _revokeTokenDelegateAuthorityClient;
}
