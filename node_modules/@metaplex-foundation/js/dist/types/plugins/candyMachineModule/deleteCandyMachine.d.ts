import type { ConfirmOptions } from '@solana/web3.js';
import { Operation, OperationHandler, Signer } from '../../types';
import { Metaplex } from '../../Metaplex';
import { TransactionBuilder } from '../../utils';
import { SendAndConfirmTransactionResponse } from '../rpcModule';
import { CandyMachine, CandyMachineConfigs } from './CandyMachine';
declare const Key: "DeleteCandyMachineOperation";
export declare const deleteCandyMachineOperation: import("../../types").OperationConstructor<DeleteCandyMachineOperation, "DeleteCandyMachineOperation", DeleteCandyMachineInput, DeleteCandyMachineOutput>;
export declare type DeleteCandyMachineOperation = Operation<typeof Key, DeleteCandyMachineInput, DeleteCandyMachineOutput>;
export declare type DeleteCandyMachineInputWithoutConfigs = {
    candyMachine: CandyMachine;
    authority?: Signer;
    confirmOptions?: ConfirmOptions;
};
export declare type DeleteCandyMachineInput = DeleteCandyMachineInputWithoutConfigs & Partial<CandyMachineConfigs>;
export declare type DeleteCandyMachineOutput = {
    response: SendAndConfirmTransactionResponse;
};
export declare const deleteCandyMachineOperationHandler: OperationHandler<DeleteCandyMachineOperation>;
export declare type DeleteCandyMachineBuilderParams = Omit<DeleteCandyMachineInput, 'confirmOptions'> & {
    instructionKey?: string;
};
export declare const deleteCandyMachineBuilder: (metaplex: Metaplex, params: DeleteCandyMachineBuilderParams) => TransactionBuilder;
export {};
