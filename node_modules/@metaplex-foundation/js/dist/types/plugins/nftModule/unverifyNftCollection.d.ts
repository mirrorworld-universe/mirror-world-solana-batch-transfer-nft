import { Metaplex } from '../../Metaplex';
import { Operation, OperationHandler, Signer } from '../../types';
import { TransactionBuilder } from '../../utils';
import { ConfirmOptions, PublicKey } from '@solana/web3.js';
import { SendAndConfirmTransactionResponse } from '../rpcModule';
declare const Key: "UnverifyNftCollectionOperation";
export declare const unverifyNftCollectionOperation: import("../../types").OperationConstructor<UnverifyNftCollectionOperation, "UnverifyNftCollectionOperation", UnverifyNftCollectionInput, UnverifyNftCollectionOutput>;
export declare type UnverifyNftCollectionOperation = Operation<typeof Key, UnverifyNftCollectionInput, UnverifyNftCollectionOutput>;
export interface UnverifyNftCollectionInput {
    mintAddress: PublicKey;
    collectionMintAddress: PublicKey;
    collectionAuthority?: Signer;
    payer?: Signer;
    isSizedCollection?: boolean;
    isDelegated?: boolean;
    confirmOptions?: ConfirmOptions;
}
export interface UnverifyNftCollectionOutput {
    response: SendAndConfirmTransactionResponse;
}
export declare const unverifyNftCollectionOperationHandler: OperationHandler<UnverifyNftCollectionOperation>;
export declare type UnverifyNftCollectionBuilderParams = Omit<UnverifyNftCollectionInput, 'confirmOptions'> & {
    instructionKey?: string;
};
export declare const unverifyNftCollectionBuilder: (metaplex: Metaplex, params: UnverifyNftCollectionBuilderParams) => TransactionBuilder;
export {};
