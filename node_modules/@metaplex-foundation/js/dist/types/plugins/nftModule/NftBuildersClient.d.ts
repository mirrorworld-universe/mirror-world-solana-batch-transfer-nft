import type { Metaplex } from '../../Metaplex';
import { _approveNftCollectionAuthorityBuildersClient } from './approveNftCollectionAuthority';
import { _approveNftUseAuthorityBuildersClient } from './approveNftUseAuthority';
import { _createNftBuildersClient } from './createNft';
import { _createSftBuildersClient } from './createSft';
import { _deleteNftBuildersClient } from './deleteNft';
import { _freezeDelegatedNftBuildersClient } from './freezeDelegatedNft';
import { _migrateToSizedCollectionNftBuildersClient } from './migrateToSizedCollectionNft';
import { _printNewEditionBuildersClient } from './printNewEdition';
import { _revokeNftCollectionAuthorityBuildersClient } from './revokeNftCollectionAuthority';
import { _revokeNftUseAuthorityBuildersClient } from './revokeNftUseAuthority';
import { _thawDelegatedNftBuildersClient } from './thawDelegatedNft';
import { _unverifyNftCollectionBuildersClient } from './unverifyNftCollection';
import { _unverifyNftCreatorBuildersClient } from './unverifyNftCreator';
import { _updateNftBuildersClient } from './updateNft';
import { _useNftBuildersClient } from './useNft';
import { _verifyNftCollectionBuildersClient } from './verifyNftCollection';
import { _verifyNftCreatorBuildersClient } from './verifyNftCreator';
export declare class NftBuildersClient {
    protected readonly metaplex: Metaplex;
    constructor(metaplex: Metaplex);
    create: typeof _createNftBuildersClient;
    createSft: typeof _createSftBuildersClient;
    printNewEdition: typeof _printNewEditionBuildersClient;
    update: typeof _updateNftBuildersClient;
    delete: typeof _deleteNftBuildersClient;
    use: typeof _useNftBuildersClient;
    approveUseAuthority: typeof _approveNftUseAuthorityBuildersClient;
    revokeUseAuthority: typeof _revokeNftUseAuthorityBuildersClient;
    verifyCreator: typeof _verifyNftCreatorBuildersClient;
    unverifyCreator: typeof _unverifyNftCreatorBuildersClient;
    verifyCollection: typeof _verifyNftCollectionBuildersClient;
    unverifyCollection: typeof _unverifyNftCollectionBuildersClient;
    approveCollectionAuthority: typeof _approveNftCollectionAuthorityBuildersClient;
    revokeCollectionAuthority: typeof _revokeNftCollectionAuthorityBuildersClient;
    migrateToSizedCollection: typeof _migrateToSizedCollectionNftBuildersClient;
    freezeDelegatedNft: typeof _freezeDelegatedNftBuildersClient;
    thawDelegatedNft: typeof _thawDelegatedNftBuildersClient;
}
