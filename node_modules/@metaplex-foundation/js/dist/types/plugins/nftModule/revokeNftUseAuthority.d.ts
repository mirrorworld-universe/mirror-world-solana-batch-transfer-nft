import { Metaplex } from '../../Metaplex';
import { Operation, OperationHandler, Signer } from '../../types';
import { TransactionBuilder } from '../../utils';
import { ConfirmOptions, PublicKey } from '@solana/web3.js';
import { SendAndConfirmTransactionResponse } from '../rpcModule';
declare const Key: "RevokeNftUseAuthorityOperation";
export declare const revokeNftUseAuthorityOperation: import("../../types").OperationConstructor<RevokeNftUseAuthorityOperation, "RevokeNftUseAuthorityOperation", RevokeNftUseAuthorityInput, RevokeNftUseAuthorityOutput>;
export declare type RevokeNftUseAuthorityOperation = Operation<typeof Key, RevokeNftUseAuthorityInput, RevokeNftUseAuthorityOutput>;
export interface RevokeNftUseAuthorityInput {
    mintAddress: PublicKey;
    user: PublicKey;
    owner?: Signer;
    ownerTokenAddress?: PublicKey;
    tokenProgram?: PublicKey;
    systemProgram?: PublicKey;
    confirmOptions?: ConfirmOptions;
}
export interface RevokeNftUseAuthorityOutput {
    response: SendAndConfirmTransactionResponse;
}
export declare const revokeNftUseAuthorityOperationHandler: OperationHandler<RevokeNftUseAuthorityOperation>;
export declare type RevokeNftUseAuthorityBuilderParams = Omit<RevokeNftUseAuthorityInput, 'confirmOptions'> & {
    instructionKey?: string;
};
export declare const revokeNftUseAuthorityBuilder: (metaplex: Metaplex, params: RevokeNftUseAuthorityBuilderParams) => TransactionBuilder;
export {};
