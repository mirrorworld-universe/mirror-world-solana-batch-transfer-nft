import { ConfirmOptions, PublicKey } from '@solana/web3.js';
import { Operation, Signer, OperationHandler } from '../../types';
import { Metaplex } from '../../Metaplex';
import { TransactionBuilder } from '../../utils';
import { SendAndConfirmTransactionResponse } from '../rpcModule';
declare const Key: "VerifyNftCreatorOperation";
export declare const verifyNftCreatorOperation: import("../../types").OperationConstructor<VerifyNftCreatorOperation, "VerifyNftCreatorOperation", VerifyNftCreatorInput, VerifyNftCreatorOutput>;
export declare type VerifyNftCreatorOperation = Operation<typeof Key, VerifyNftCreatorInput, VerifyNftCreatorOutput>;
export interface VerifyNftCreatorInput {
    mintAddress: PublicKey;
    creator?: Signer;
    confirmOptions?: ConfirmOptions;
}
export interface VerifyNftCreatorOutput {
    response: SendAndConfirmTransactionResponse;
}
export declare const verifyNftCreatorOperationHandler: OperationHandler<VerifyNftCreatorOperation>;
export declare type VerifyNftCreatorBuilderParams = Omit<VerifyNftCreatorInput, 'confirmOptions'> & {
    instructionKey?: string;
};
export declare const verifyNftCreatorBuilder: (metaplex: Metaplex, params: VerifyNftCreatorBuilderParams) => TransactionBuilder;
export {};
