import { Metaplex } from '../../Metaplex';
import { Operation, OperationHandler, Signer } from '../../types';
import { TransactionBuilder } from '../../utils';
import { ConfirmOptions, PublicKey } from '@solana/web3.js';
import { SendAndConfirmTransactionResponse } from '../rpcModule';
declare const Key: "RevokeNftCollectionAuthorityOperation";
export declare const revokeNftCollectionAuthorityOperation: import("../../types").OperationConstructor<RevokeNftCollectionAuthorityOperation, "RevokeNftCollectionAuthorityOperation", RevokeNftCollectionAuthorityInput, RevokeNftCollectionAuthorityOutput>;
export declare type RevokeNftCollectionAuthorityOperation = Operation<typeof Key, RevokeNftCollectionAuthorityInput, RevokeNftCollectionAuthorityOutput>;
export interface RevokeNftCollectionAuthorityInput {
    mintAddress: PublicKey;
    collectionAuthority: PublicKey;
    revokeAuthority?: Signer;
    confirmOptions?: ConfirmOptions;
}
export interface RevokeNftCollectionAuthorityOutput {
    response: SendAndConfirmTransactionResponse;
}
export declare const revokeNftCollectionAuthorityOperationHandler: OperationHandler<RevokeNftCollectionAuthorityOperation>;
export declare type RevokeNftCollectionAuthorityBuilderParams = Omit<RevokeNftCollectionAuthorityInput, 'confirmOptions'> & {
    instructionKey?: string;
};
export declare const revokeNftCollectionAuthorityBuilder: (metaplex: Metaplex, params: RevokeNftCollectionAuthorityBuilderParams) => TransactionBuilder;
export {};
