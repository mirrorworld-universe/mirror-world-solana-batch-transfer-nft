import { Metaplex } from '../../Metaplex';
import { Operation, OperationHandler, Signer } from '../../types';
import { TransactionBuilder } from '../../utils';
import { ConfirmOptions, PublicKey } from '@solana/web3.js';
import { SendAndConfirmTransactionResponse } from '../rpcModule';
declare const Key: "VerifyNftCollectionOperation";
export declare const verifyNftCollectionOperation: import("../../types").OperationConstructor<VerifyNftCollectionOperation, "VerifyNftCollectionOperation", VerifyNftCollectionInput, VerifyNftCollectionOutput>;
export declare type VerifyNftCollectionOperation = Operation<typeof Key, VerifyNftCollectionInput, VerifyNftCollectionOutput>;
export interface VerifyNftCollectionInput {
    mintAddress: PublicKey;
    collectionMintAddress: PublicKey;
    collectionAuthority?: Signer;
    payer?: Signer;
    isSizedCollection?: boolean;
    isDelegated?: boolean;
    confirmOptions?: ConfirmOptions;
}
export interface VerifyNftCollectionOutput {
    response: SendAndConfirmTransactionResponse;
}
export declare const verifyNftCollectionOperationHandler: OperationHandler<VerifyNftCollectionOperation>;
export declare type VerifyNftCollectionBuilderParams = Omit<VerifyNftCollectionInput, 'confirmOptions'> & {
    instructionKey?: string;
};
export declare const verifyNftCollectionBuilder: (metaplex: Metaplex, params: VerifyNftCollectionBuilderParams) => TransactionBuilder;
export {};
