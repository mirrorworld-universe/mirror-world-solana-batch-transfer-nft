import { Metaplex } from '../../Metaplex';
import { BigNumber, Operation, OperationHandler, Signer } from '../../types';
import { TransactionBuilder } from '../../utils';
import { ConfirmOptions, PublicKey } from '@solana/web3.js';
import { SendAndConfirmTransactionResponse } from '../rpcModule';
declare const Key: "MigrateToSizedCollectionNftOperation";
export declare const migrateToSizedCollectionNftOperation: import("../../types").OperationConstructor<MigrateToSizedCollectionNftOperation, "MigrateToSizedCollectionNftOperation", MigrateToSizedCollectionNftInput, MigrateToSizedCollectionNftOutput>;
export declare type MigrateToSizedCollectionNftOperation = Operation<typeof Key, MigrateToSizedCollectionNftInput, MigrateToSizedCollectionNftOutput>;
export interface MigrateToSizedCollectionNftInput {
    mintAddress: PublicKey;
    collectionAuthority?: Signer;
    size: BigNumber;
    isDelegated?: boolean;
    confirmOptions?: ConfirmOptions;
}
export interface MigrateToSizedCollectionNftOutput {
    response: SendAndConfirmTransactionResponse;
}
export declare const migrateToSizedCollectionNftOperationHandler: OperationHandler<MigrateToSizedCollectionNftOperation>;
export declare type MigrateToSizedCollectionNftBuilderParams = Omit<MigrateToSizedCollectionNftInput, 'confirmOptions'> & {
    instructionKey?: string;
};
export declare const migrateToSizedCollectionNftBuilder: (metaplex: Metaplex, params: MigrateToSizedCollectionNftBuilderParams) => TransactionBuilder;
export {};
