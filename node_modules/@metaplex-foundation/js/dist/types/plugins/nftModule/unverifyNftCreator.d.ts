import { ConfirmOptions, PublicKey } from '@solana/web3.js';
import { Operation, Signer, OperationHandler } from '../../types';
import { Metaplex } from '../../Metaplex';
import { TransactionBuilder } from '../../utils';
import { SendAndConfirmTransactionResponse } from '../rpcModule';
declare const Key: "UnverifyNftCreatorOperation";
export declare const unverifyNftCreatorOperation: import("../../types").OperationConstructor<UnverifyNftCreatorOperation, "UnverifyNftCreatorOperation", UnverifyNftCreatorInput, UnverifyNftCreatorOutput>;
export declare type UnverifyNftCreatorOperation = Operation<typeof Key, UnverifyNftCreatorInput, UnverifyNftCreatorOutput>;
export interface UnverifyNftCreatorInput {
    mintAddress: PublicKey;
    creator?: Signer;
    confirmOptions?: ConfirmOptions;
}
export interface UnverifyNftCreatorOutput {
    response: SendAndConfirmTransactionResponse;
}
export declare const unverifyNftCreatorOperationHandler: OperationHandler<UnverifyNftCreatorOperation>;
export declare type UnverifyNftCreatorBuilderParams = Omit<UnverifyNftCreatorInput, 'confirmOptions'> & {
    instructionKey?: string;
};
export declare const unverifyNftCreatorBuilder: (metaplex: Metaplex, params: UnverifyNftCreatorBuilderParams) => TransactionBuilder;
export {};
