import type { PublicKey } from '@solana/web3.js';
import type { Pda } from '../../types';
import type { Metadata } from './Metadata';
import type { Mint, Token } from '../tokenModule';
import type { NftEdition } from './NftEdition';
import { SftWithToken } from './Sft';
export declare type Nft = Omit<Metadata, 'model' | 'address' | 'mintAddress'> & Readonly<{
    model: 'nft';
    address: PublicKey;
    metadataAddress: Pda;
    mint: Mint;
    edition: NftEdition;
}>;
export declare const isNft: (value: any) => value is Nft;
export declare function assertNft(value: any): asserts value is Nft;
export declare const toNft: (metadata: Metadata, mint: Mint, edition: NftEdition) => Nft;
export declare type NftWithToken = Nft & {
    token: Token;
};
export declare const isNftWithToken: (value: any) => value is NftWithToken;
export declare function assertNftWithToken(value: any): asserts value is NftWithToken;
export declare function assertNftOrSftWithToken(value: any): asserts value is NftWithToken | SftWithToken;
export declare const toNftWithToken: (metadata: Metadata, mint: Mint, edition: NftEdition, token: Token) => NftWithToken;
